// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AMAServer.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_AMAServer_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_AMAServer_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_AMAServer_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_AMAServer_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_AMAServer_2eproto;
namespace AMA {
class MDOrderBook;
struct MDOrderBookDefaultTypeInternal;
extern MDOrderBookDefaultTypeInternal _MDOrderBook_default_instance_;
class MDOrderBookItem;
struct MDOrderBookItemDefaultTypeInternal;
extern MDOrderBookItemDefaultTypeInternal _MDOrderBookItem_default_instance_;
class MDOrderBookRequest;
struct MDOrderBookRequestDefaultTypeInternal;
extern MDOrderBookRequestDefaultTypeInternal _MDOrderBookRequest_default_instance_;
class MDOrderBookResponse;
struct MDOrderBookResponseDefaultTypeInternal;
extern MDOrderBookResponseDefaultTypeInternal _MDOrderBookResponse_default_instance_;
}  // namespace AMA
PROTOBUF_NAMESPACE_OPEN
template<> ::AMA::MDOrderBook* Arena::CreateMaybeMessage<::AMA::MDOrderBook>(Arena*);
template<> ::AMA::MDOrderBookItem* Arena::CreateMaybeMessage<::AMA::MDOrderBookItem>(Arena*);
template<> ::AMA::MDOrderBookRequest* Arena::CreateMaybeMessage<::AMA::MDOrderBookRequest>(Arena*);
template<> ::AMA::MDOrderBookResponse* Arena::CreateMaybeMessage<::AMA::MDOrderBookResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace AMA {

// ===================================================================

class MDOrderBookRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AMA.MDOrderBookRequest) */ {
 public:
  inline MDOrderBookRequest() : MDOrderBookRequest(nullptr) {}
  ~MDOrderBookRequest() override;
  explicit constexpr MDOrderBookRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MDOrderBookRequest(const MDOrderBookRequest& from);
  MDOrderBookRequest(MDOrderBookRequest&& from) noexcept
    : MDOrderBookRequest() {
    *this = ::std::move(from);
  }

  inline MDOrderBookRequest& operator=(const MDOrderBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MDOrderBookRequest& operator=(MDOrderBookRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MDOrderBookRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MDOrderBookRequest* internal_default_instance() {
    return reinterpret_cast<const MDOrderBookRequest*>(
               &_MDOrderBookRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MDOrderBookRequest& a, MDOrderBookRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(MDOrderBookRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MDOrderBookRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MDOrderBookRequest* New() const final {
    return new MDOrderBookRequest();
  }

  MDOrderBookRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MDOrderBookRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MDOrderBookRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MDOrderBookRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MDOrderBookRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AMA.MDOrderBookRequest";
  }
  protected:
  explicit MDOrderBookRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqTimeFieldNumber = 1,
  };
  // string req_time = 1;
  void clear_req_time();
  const std::string& req_time() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_req_time(ArgT0&& arg0, ArgT... args);
  std::string* mutable_req_time();
  PROTOBUF_MUST_USE_RESULT std::string* release_req_time();
  void set_allocated_req_time(std::string* req_time);
  private:
  const std::string& _internal_req_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_req_time(const std::string& value);
  std::string* _internal_mutable_req_time();
  public:

  // @@protoc_insertion_point(class_scope:AMA.MDOrderBookRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr req_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AMAServer_2eproto;
};
// -------------------------------------------------------------------

class MDOrderBookResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AMA.MDOrderBookResponse) */ {
 public:
  inline MDOrderBookResponse() : MDOrderBookResponse(nullptr) {}
  ~MDOrderBookResponse() override;
  explicit constexpr MDOrderBookResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MDOrderBookResponse(const MDOrderBookResponse& from);
  MDOrderBookResponse(MDOrderBookResponse&& from) noexcept
    : MDOrderBookResponse() {
    *this = ::std::move(from);
  }

  inline MDOrderBookResponse& operator=(const MDOrderBookResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MDOrderBookResponse& operator=(MDOrderBookResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MDOrderBookResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MDOrderBookResponse* internal_default_instance() {
    return reinterpret_cast<const MDOrderBookResponse*>(
               &_MDOrderBookResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MDOrderBookResponse& a, MDOrderBookResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MDOrderBookResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MDOrderBookResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MDOrderBookResponse* New() const final {
    return new MDOrderBookResponse();
  }

  MDOrderBookResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MDOrderBookResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MDOrderBookResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MDOrderBookResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MDOrderBookResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AMA.MDOrderBookResponse";
  }
  protected:
  explicit MDOrderBookResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderBookVectorFieldNumber = 1,
  };
  // repeated .AMA.MDOrderBook order_book_vector = 1;
  int order_book_vector_size() const;
  private:
  int _internal_order_book_vector_size() const;
  public:
  void clear_order_book_vector();
  ::AMA::MDOrderBook* mutable_order_book_vector(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBook >*
      mutable_order_book_vector();
  private:
  const ::AMA::MDOrderBook& _internal_order_book_vector(int index) const;
  ::AMA::MDOrderBook* _internal_add_order_book_vector();
  public:
  const ::AMA::MDOrderBook& order_book_vector(int index) const;
  ::AMA::MDOrderBook* add_order_book_vector();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBook >&
      order_book_vector() const;

  // @@protoc_insertion_point(class_scope:AMA.MDOrderBookResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBook > order_book_vector_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AMAServer_2eproto;
};
// -------------------------------------------------------------------

class MDOrderBook final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AMA.MDOrderBook) */ {
 public:
  inline MDOrderBook() : MDOrderBook(nullptr) {}
  ~MDOrderBook() override;
  explicit constexpr MDOrderBook(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MDOrderBook(const MDOrderBook& from);
  MDOrderBook(MDOrderBook&& from) noexcept
    : MDOrderBook() {
    *this = ::std::move(from);
  }

  inline MDOrderBook& operator=(const MDOrderBook& from) {
    CopyFrom(from);
    return *this;
  }
  inline MDOrderBook& operator=(MDOrderBook&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MDOrderBook& default_instance() {
    return *internal_default_instance();
  }
  static inline const MDOrderBook* internal_default_instance() {
    return reinterpret_cast<const MDOrderBook*>(
               &_MDOrderBook_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MDOrderBook& a, MDOrderBook& b) {
    a.Swap(&b);
  }
  inline void Swap(MDOrderBook* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MDOrderBook* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MDOrderBook* New() const final {
    return new MDOrderBook();
  }

  MDOrderBook* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MDOrderBook>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MDOrderBook& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MDOrderBook& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MDOrderBook* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AMA.MDOrderBook";
  }
  protected:
  explicit MDOrderBook(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBidOrderBookFieldNumber = 7,
    kOfferOrderBookFieldNumber = 8,
    kSecurityCodeFieldNumber = 3,
    kChannelNoFieldNumber = 1,
    kMarketTypeFieldNumber = 2,
    kLastTickTimeFieldNumber = 4,
    kLastSnapshotTimeFieldNumber = 5,
    kLastTickSeqFieldNumber = 6,
  };
  // repeated .AMA.MDOrderBookItem bid_order_book = 7;
  int bid_order_book_size() const;
  private:
  int _internal_bid_order_book_size() const;
  public:
  void clear_bid_order_book();
  ::AMA::MDOrderBookItem* mutable_bid_order_book(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBookItem >*
      mutable_bid_order_book();
  private:
  const ::AMA::MDOrderBookItem& _internal_bid_order_book(int index) const;
  ::AMA::MDOrderBookItem* _internal_add_bid_order_book();
  public:
  const ::AMA::MDOrderBookItem& bid_order_book(int index) const;
  ::AMA::MDOrderBookItem* add_bid_order_book();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBookItem >&
      bid_order_book() const;

  // repeated .AMA.MDOrderBookItem offer_order_book = 8;
  int offer_order_book_size() const;
  private:
  int _internal_offer_order_book_size() const;
  public:
  void clear_offer_order_book();
  ::AMA::MDOrderBookItem* mutable_offer_order_book(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBookItem >*
      mutable_offer_order_book();
  private:
  const ::AMA::MDOrderBookItem& _internal_offer_order_book(int index) const;
  ::AMA::MDOrderBookItem* _internal_add_offer_order_book();
  public:
  const ::AMA::MDOrderBookItem& offer_order_book(int index) const;
  ::AMA::MDOrderBookItem* add_offer_order_book();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBookItem >&
      offer_order_book() const;

  // string security_code = 3;
  void clear_security_code();
  const std::string& security_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_security_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_security_code();
  PROTOBUF_MUST_USE_RESULT std::string* release_security_code();
  void set_allocated_security_code(std::string* security_code);
  private:
  const std::string& _internal_security_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_security_code(const std::string& value);
  std::string* _internal_mutable_security_code();
  public:

  // int32 channel_no = 1;
  void clear_channel_no();
  ::PROTOBUF_NAMESPACE_ID::int32 channel_no() const;
  void set_channel_no(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_channel_no() const;
  void _internal_set_channel_no(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 market_type = 2;
  void clear_market_type();
  ::PROTOBUF_NAMESPACE_ID::int32 market_type() const;
  void set_market_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_market_type() const;
  void _internal_set_market_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 last_tick_time = 4;
  void clear_last_tick_time();
  ::PROTOBUF_NAMESPACE_ID::int64 last_tick_time() const;
  void set_last_tick_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_last_tick_time() const;
  void _internal_set_last_tick_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 last_snapshot_time = 5;
  void clear_last_snapshot_time();
  ::PROTOBUF_NAMESPACE_ID::int64 last_snapshot_time() const;
  void set_last_snapshot_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_last_snapshot_time() const;
  void _internal_set_last_snapshot_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 last_tick_seq = 6;
  void clear_last_tick_seq();
  ::PROTOBUF_NAMESPACE_ID::int64 last_tick_seq() const;
  void set_last_tick_seq(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_last_tick_seq() const;
  void _internal_set_last_tick_seq(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:AMA.MDOrderBook)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBookItem > bid_order_book_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBookItem > offer_order_book_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr security_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 channel_no_;
  ::PROTOBUF_NAMESPACE_ID::int32 market_type_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_tick_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_snapshot_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_tick_seq_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AMAServer_2eproto;
};
// -------------------------------------------------------------------

class MDOrderBookItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AMA.MDOrderBookItem) */ {
 public:
  inline MDOrderBookItem() : MDOrderBookItem(nullptr) {}
  ~MDOrderBookItem() override;
  explicit constexpr MDOrderBookItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MDOrderBookItem(const MDOrderBookItem& from);
  MDOrderBookItem(MDOrderBookItem&& from) noexcept
    : MDOrderBookItem() {
    *this = ::std::move(from);
  }

  inline MDOrderBookItem& operator=(const MDOrderBookItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MDOrderBookItem& operator=(MDOrderBookItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MDOrderBookItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const MDOrderBookItem* internal_default_instance() {
    return reinterpret_cast<const MDOrderBookItem*>(
               &_MDOrderBookItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MDOrderBookItem& a, MDOrderBookItem& b) {
    a.Swap(&b);
  }
  inline void Swap(MDOrderBookItem* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MDOrderBookItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MDOrderBookItem* New() const final {
    return new MDOrderBookItem();
  }

  MDOrderBookItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MDOrderBookItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MDOrderBookItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MDOrderBookItem& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MDOrderBookItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AMA.MDOrderBookItem";
  }
  protected:
  explicit MDOrderBookItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderQueueFieldNumber = 4,
    kPriceFieldNumber = 1,
    kVolumeFieldNumber = 2,
  };
  // repeated int64 order_queue = 4;
  int order_queue_size() const;
  private:
  int _internal_order_queue_size() const;
  public:
  void clear_order_queue();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_order_queue(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_order_queue() const;
  void _internal_add_order_queue(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_order_queue();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 order_queue(int index) const;
  void set_order_queue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_order_queue(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      order_queue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_order_queue();

  // int64 price = 1;
  void clear_price();
  ::PROTOBUF_NAMESPACE_ID::int64 price() const;
  void set_price(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_price() const;
  void _internal_set_price(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 volume = 2;
  void clear_volume();
  ::PROTOBUF_NAMESPACE_ID::int64 volume() const;
  void set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_volume() const;
  void _internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:AMA.MDOrderBookItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > order_queue_;
  mutable std::atomic<int> _order_queue_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 price_;
  ::PROTOBUF_NAMESPACE_ID::int64 volume_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AMAServer_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MDOrderBookRequest

// string req_time = 1;
inline void MDOrderBookRequest::clear_req_time() {
  req_time_.ClearToEmpty();
}
inline const std::string& MDOrderBookRequest::req_time() const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBookRequest.req_time)
  return _internal_req_time();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MDOrderBookRequest::set_req_time(ArgT0&& arg0, ArgT... args) {
 
 req_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AMA.MDOrderBookRequest.req_time)
}
inline std::string* MDOrderBookRequest::mutable_req_time() {
  std::string* _s = _internal_mutable_req_time();
  // @@protoc_insertion_point(field_mutable:AMA.MDOrderBookRequest.req_time)
  return _s;
}
inline const std::string& MDOrderBookRequest::_internal_req_time() const {
  return req_time_.Get();
}
inline void MDOrderBookRequest::_internal_set_req_time(const std::string& value) {
  
  req_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* MDOrderBookRequest::_internal_mutable_req_time() {
  
  return req_time_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* MDOrderBookRequest::release_req_time() {
  // @@protoc_insertion_point(field_release:AMA.MDOrderBookRequest.req_time)
  return req_time_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void MDOrderBookRequest::set_allocated_req_time(std::string* req_time) {
  if (req_time != nullptr) {
    
  } else {
    
  }
  req_time_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), req_time,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:AMA.MDOrderBookRequest.req_time)
}

// -------------------------------------------------------------------

// MDOrderBookResponse

// repeated .AMA.MDOrderBook order_book_vector = 1;
inline int MDOrderBookResponse::_internal_order_book_vector_size() const {
  return order_book_vector_.size();
}
inline int MDOrderBookResponse::order_book_vector_size() const {
  return _internal_order_book_vector_size();
}
inline void MDOrderBookResponse::clear_order_book_vector() {
  order_book_vector_.Clear();
}
inline ::AMA::MDOrderBook* MDOrderBookResponse::mutable_order_book_vector(int index) {
  // @@protoc_insertion_point(field_mutable:AMA.MDOrderBookResponse.order_book_vector)
  return order_book_vector_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBook >*
MDOrderBookResponse::mutable_order_book_vector() {
  // @@protoc_insertion_point(field_mutable_list:AMA.MDOrderBookResponse.order_book_vector)
  return &order_book_vector_;
}
inline const ::AMA::MDOrderBook& MDOrderBookResponse::_internal_order_book_vector(int index) const {
  return order_book_vector_.Get(index);
}
inline const ::AMA::MDOrderBook& MDOrderBookResponse::order_book_vector(int index) const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBookResponse.order_book_vector)
  return _internal_order_book_vector(index);
}
inline ::AMA::MDOrderBook* MDOrderBookResponse::_internal_add_order_book_vector() {
  return order_book_vector_.Add();
}
inline ::AMA::MDOrderBook* MDOrderBookResponse::add_order_book_vector() {
  ::AMA::MDOrderBook* _add = _internal_add_order_book_vector();
  // @@protoc_insertion_point(field_add:AMA.MDOrderBookResponse.order_book_vector)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBook >&
MDOrderBookResponse::order_book_vector() const {
  // @@protoc_insertion_point(field_list:AMA.MDOrderBookResponse.order_book_vector)
  return order_book_vector_;
}

// -------------------------------------------------------------------

// MDOrderBook

// int32 channel_no = 1;
inline void MDOrderBook::clear_channel_no() {
  channel_no_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDOrderBook::_internal_channel_no() const {
  return channel_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDOrderBook::channel_no() const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBook.channel_no)
  return _internal_channel_no();
}
inline void MDOrderBook::_internal_set_channel_no(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  channel_no_ = value;
}
inline void MDOrderBook::set_channel_no(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_channel_no(value);
  // @@protoc_insertion_point(field_set:AMA.MDOrderBook.channel_no)
}

// int32 market_type = 2;
inline void MDOrderBook::clear_market_type() {
  market_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDOrderBook::_internal_market_type() const {
  return market_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MDOrderBook::market_type() const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBook.market_type)
  return _internal_market_type();
}
inline void MDOrderBook::_internal_set_market_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  market_type_ = value;
}
inline void MDOrderBook::set_market_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_market_type(value);
  // @@protoc_insertion_point(field_set:AMA.MDOrderBook.market_type)
}

// string security_code = 3;
inline void MDOrderBook::clear_security_code() {
  security_code_.ClearToEmpty();
}
inline const std::string& MDOrderBook::security_code() const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBook.security_code)
  return _internal_security_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MDOrderBook::set_security_code(ArgT0&& arg0, ArgT... args) {
 
 security_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:AMA.MDOrderBook.security_code)
}
inline std::string* MDOrderBook::mutable_security_code() {
  std::string* _s = _internal_mutable_security_code();
  // @@protoc_insertion_point(field_mutable:AMA.MDOrderBook.security_code)
  return _s;
}
inline const std::string& MDOrderBook::_internal_security_code() const {
  return security_code_.Get();
}
inline void MDOrderBook::_internal_set_security_code(const std::string& value) {
  
  security_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* MDOrderBook::_internal_mutable_security_code() {
  
  return security_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* MDOrderBook::release_security_code() {
  // @@protoc_insertion_point(field_release:AMA.MDOrderBook.security_code)
  return security_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void MDOrderBook::set_allocated_security_code(std::string* security_code) {
  if (security_code != nullptr) {
    
  } else {
    
  }
  security_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), security_code,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:AMA.MDOrderBook.security_code)
}

// int64 last_tick_time = 4;
inline void MDOrderBook::clear_last_tick_time() {
  last_tick_time_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBook::_internal_last_tick_time() const {
  return last_tick_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBook::last_tick_time() const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBook.last_tick_time)
  return _internal_last_tick_time();
}
inline void MDOrderBook::_internal_set_last_tick_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  last_tick_time_ = value;
}
inline void MDOrderBook::set_last_tick_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_last_tick_time(value);
  // @@protoc_insertion_point(field_set:AMA.MDOrderBook.last_tick_time)
}

// int64 last_snapshot_time = 5;
inline void MDOrderBook::clear_last_snapshot_time() {
  last_snapshot_time_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBook::_internal_last_snapshot_time() const {
  return last_snapshot_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBook::last_snapshot_time() const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBook.last_snapshot_time)
  return _internal_last_snapshot_time();
}
inline void MDOrderBook::_internal_set_last_snapshot_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  last_snapshot_time_ = value;
}
inline void MDOrderBook::set_last_snapshot_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_last_snapshot_time(value);
  // @@protoc_insertion_point(field_set:AMA.MDOrderBook.last_snapshot_time)
}

// int64 last_tick_seq = 6;
inline void MDOrderBook::clear_last_tick_seq() {
  last_tick_seq_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBook::_internal_last_tick_seq() const {
  return last_tick_seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBook::last_tick_seq() const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBook.last_tick_seq)
  return _internal_last_tick_seq();
}
inline void MDOrderBook::_internal_set_last_tick_seq(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  last_tick_seq_ = value;
}
inline void MDOrderBook::set_last_tick_seq(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_last_tick_seq(value);
  // @@protoc_insertion_point(field_set:AMA.MDOrderBook.last_tick_seq)
}

// repeated .AMA.MDOrderBookItem bid_order_book = 7;
inline int MDOrderBook::_internal_bid_order_book_size() const {
  return bid_order_book_.size();
}
inline int MDOrderBook::bid_order_book_size() const {
  return _internal_bid_order_book_size();
}
inline void MDOrderBook::clear_bid_order_book() {
  bid_order_book_.Clear();
}
inline ::AMA::MDOrderBookItem* MDOrderBook::mutable_bid_order_book(int index) {
  // @@protoc_insertion_point(field_mutable:AMA.MDOrderBook.bid_order_book)
  return bid_order_book_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBookItem >*
MDOrderBook::mutable_bid_order_book() {
  // @@protoc_insertion_point(field_mutable_list:AMA.MDOrderBook.bid_order_book)
  return &bid_order_book_;
}
inline const ::AMA::MDOrderBookItem& MDOrderBook::_internal_bid_order_book(int index) const {
  return bid_order_book_.Get(index);
}
inline const ::AMA::MDOrderBookItem& MDOrderBook::bid_order_book(int index) const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBook.bid_order_book)
  return _internal_bid_order_book(index);
}
inline ::AMA::MDOrderBookItem* MDOrderBook::_internal_add_bid_order_book() {
  return bid_order_book_.Add();
}
inline ::AMA::MDOrderBookItem* MDOrderBook::add_bid_order_book() {
  ::AMA::MDOrderBookItem* _add = _internal_add_bid_order_book();
  // @@protoc_insertion_point(field_add:AMA.MDOrderBook.bid_order_book)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBookItem >&
MDOrderBook::bid_order_book() const {
  // @@protoc_insertion_point(field_list:AMA.MDOrderBook.bid_order_book)
  return bid_order_book_;
}

// repeated .AMA.MDOrderBookItem offer_order_book = 8;
inline int MDOrderBook::_internal_offer_order_book_size() const {
  return offer_order_book_.size();
}
inline int MDOrderBook::offer_order_book_size() const {
  return _internal_offer_order_book_size();
}
inline void MDOrderBook::clear_offer_order_book() {
  offer_order_book_.Clear();
}
inline ::AMA::MDOrderBookItem* MDOrderBook::mutable_offer_order_book(int index) {
  // @@protoc_insertion_point(field_mutable:AMA.MDOrderBook.offer_order_book)
  return offer_order_book_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBookItem >*
MDOrderBook::mutable_offer_order_book() {
  // @@protoc_insertion_point(field_mutable_list:AMA.MDOrderBook.offer_order_book)
  return &offer_order_book_;
}
inline const ::AMA::MDOrderBookItem& MDOrderBook::_internal_offer_order_book(int index) const {
  return offer_order_book_.Get(index);
}
inline const ::AMA::MDOrderBookItem& MDOrderBook::offer_order_book(int index) const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBook.offer_order_book)
  return _internal_offer_order_book(index);
}
inline ::AMA::MDOrderBookItem* MDOrderBook::_internal_add_offer_order_book() {
  return offer_order_book_.Add();
}
inline ::AMA::MDOrderBookItem* MDOrderBook::add_offer_order_book() {
  ::AMA::MDOrderBookItem* _add = _internal_add_offer_order_book();
  // @@protoc_insertion_point(field_add:AMA.MDOrderBook.offer_order_book)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AMA::MDOrderBookItem >&
MDOrderBook::offer_order_book() const {
  // @@protoc_insertion_point(field_list:AMA.MDOrderBook.offer_order_book)
  return offer_order_book_;
}

// -------------------------------------------------------------------

// MDOrderBookItem

// int64 price = 1;
inline void MDOrderBookItem::clear_price() {
  price_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBookItem::_internal_price() const {
  return price_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBookItem::price() const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBookItem.price)
  return _internal_price();
}
inline void MDOrderBookItem::_internal_set_price(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  price_ = value;
}
inline void MDOrderBookItem::set_price(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:AMA.MDOrderBookItem.price)
}

// int64 volume = 2;
inline void MDOrderBookItem::clear_volume() {
  volume_ = int64_t{0};
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBookItem::_internal_volume() const {
  return volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBookItem::volume() const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBookItem.volume)
  return _internal_volume();
}
inline void MDOrderBookItem::_internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  volume_ = value;
}
inline void MDOrderBookItem::set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:AMA.MDOrderBookItem.volume)
}

// repeated int64 order_queue = 4;
inline int MDOrderBookItem::_internal_order_queue_size() const {
  return order_queue_.size();
}
inline int MDOrderBookItem::order_queue_size() const {
  return _internal_order_queue_size();
}
inline void MDOrderBookItem::clear_order_queue() {
  order_queue_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBookItem::_internal_order_queue(int index) const {
  return order_queue_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MDOrderBookItem::order_queue(int index) const {
  // @@protoc_insertion_point(field_get:AMA.MDOrderBookItem.order_queue)
  return _internal_order_queue(index);
}
inline void MDOrderBookItem::set_order_queue(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  order_queue_.Set(index, value);
  // @@protoc_insertion_point(field_set:AMA.MDOrderBookItem.order_queue)
}
inline void MDOrderBookItem::_internal_add_order_queue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  order_queue_.Add(value);
}
inline void MDOrderBookItem::add_order_queue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_order_queue(value);
  // @@protoc_insertion_point(field_add:AMA.MDOrderBookItem.order_queue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MDOrderBookItem::_internal_order_queue() const {
  return order_queue_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MDOrderBookItem::order_queue() const {
  // @@protoc_insertion_point(field_list:AMA.MDOrderBookItem.order_queue)
  return _internal_order_queue();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MDOrderBookItem::_internal_mutable_order_queue() {
  return &order_queue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MDOrderBookItem::mutable_order_queue() {
  // @@protoc_insertion_point(field_mutable_list:AMA.MDOrderBookItem.order_queue)
  return _internal_mutable_order_queue();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace AMA

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_AMAServer_2eproto
